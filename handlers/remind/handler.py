import re
from datetime import datetime, timedelta

import aiosqlite
from aiogram import html
from aiogram.filters import CommandObject
from aiogram.methods import SetMessageReaction
from aiogram.types import Message, ReactionTypeEmoji

from main import bot
from .scheduler_manager import main_sched


async def remind_command(message: Message, command: CommandObject) -> None:
    args = command.args
    if args:
        args = args.split(' ', 1)
        if len(args) < 2:
            await message.reply(
                "<b>üö´ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> /remind [<i>–≤—Ä–µ–º—è</i>] [<i>—Ç–µ–∫—Å—Ç</i>]")
            return

        delay, reminder_text = args
        delay_pattern = re.compile(r"(\d+)([Mwdhms–ú–Ω–¥—á–º—Å])")
        match = delay_pattern.match(delay)
        if not match:
            await message.reply(
                "<b>üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.\n"
                + "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è:</b>\n"
                + "‚Äì <b>M</b> ‚Äî –¥–ª—è –º–µ—Å—è—Ü–µ–≤\n"
                + "‚Äì <b>w</b> –∏–ª–∏ <b>–Ω</b> ‚Äî –¥–ª—è –Ω–µ–¥–µ–ª—å\n"
                + "‚Äì <b>d</b> –∏–ª–∏ <b>–¥</b> ‚Äî –¥–ª—è –¥–Ω–µ–π\n"
                + "‚Äì <b>h</b> –∏–ª–∏ <b>—á</b> ‚Äî –¥–ª—è —á–∞—Å–æ–≤\n"
                + "‚Äì <b>m</b> –∏–ª–∏ <b>–º</b> ‚Äî –¥–ª—è –º–∏–Ω—É—Ç\n"
                + "‚Äì <b>s</b> –∏–ª–∏ <b>—Å</b> ‚Äî –¥–ª—è —Å–µ–∫—É–Ω–¥"
            )
            return

        amount, unit = match.groups()
        amount = int(amount)
        delta = {
            # English
            "M": timedelta(days=amount * 30),
            "w": timedelta(weeks=amount),
            "d": timedelta(days=amount),
            "h": timedelta(hours=amount),
            "m": timedelta(minutes=amount),
            "s": timedelta(seconds=amount),

            # Cyrillic
            "–ú": timedelta(days=amount * 30),
            "–Ω": timedelta(weeks=amount),
            "–¥": timedelta(days=amount),
            "—á": timedelta(hours=amount),
            "–º": timedelta(minutes=amount),
            "—Å": timedelta(seconds=amount),
        }[unit]

        remind_time = datetime.now() + delta

        # Limit maximum reminder time to 1 year
        limit = datetime.now() + timedelta(days=365)
        if remind_time < limit:
            async with aiosqlite.connect('./data/reminders.db') as db:
                await db.execute("INSERT INTO reminders (chat_id, user_id, username, text, remind_time) VALUES (?, ?, ?, ?, ?)",
                                 (message.chat.id, message.from_user.id, message.from_user.username, reminder_text, remind_time))
                await db.commit()

            main_sched.add_job(
                send_reminder,
                'date',
                run_date=remind_time,
                args=[
                    message.chat.id,
                    message.from_user.id,
                    message.from_user.username,
                    reminder_text,
                ],
            )

            await bot.set_message_reaction(
                chat_id=message.chat.id,
                message_id=message.message_id,
                reaction=[
                    ReactionTypeEmoji(emoji="‚úç")
                ],
            )
        else:
            await message.reply(
                html.bold("üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–ª—å—à–µ, —á–µ–º –Ω–∞ 1 –≥–æ–¥."))
    else:
        await message.reply(
            "<b>üö´ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> /remind [<i>–≤—Ä–µ–º—è</i>] [<i>—Ç–µ–∫—Å—Ç</i>]")


async def send_reminder(chat_id: int, user_id: int, username: str, reminder_text: str) -> None:
    await bot.send_message(
        chat_id,
        f"@{html.quote(username)}, –Ω–∞–ø–æ–º–∏–Ω–∞—é:\n"
        + f"{html.blockquote(html.quote(reminder_text))}",
    )

    async with aiosqlite.connect('./data/reminders.db') as db:
        await db.execute("DELETE FROM reminders WHERE user_id = ? AND remind_time <= ?", (user_id, datetime.now(),))
        await db.commit()
